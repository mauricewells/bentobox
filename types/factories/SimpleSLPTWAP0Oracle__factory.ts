/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SimpleSLPTWAP0Oracle } from "../SimpleSLPTWAP0Oracle";

export class SimpleSLPTWAP0Oracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SimpleSLPTWAP0Oracle> {
    return super.deploy(overrides || {}) as Promise<SimpleSLPTWAP0Oracle>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleSLPTWAP0Oracle {
    return super.attach(address) as SimpleSLPTWAP0Oracle;
  }
  connect(signer: Signer): SimpleSLPTWAP0Oracle__factory {
    return super.connect(signer) as SimpleSLPTWAP0Oracle__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleSLPTWAP0Oracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleSLPTWAP0Oracle;
  }
}

const _abi = [
  {
    inputs: [],
    name: "PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "pair",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
    ],
    name: "_get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "callerInfo",
    outputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "pair",
        type: "address",
      },
    ],
    name: "getDataParameter",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "",
        type: "address",
      },
    ],
    name: "pairs",
    outputs: [
      {
        internalType: "uint256",
        name: "priceCumulativeLast",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "blockTimestampLast",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint224",
            name: "_x",
            type: "uint224",
          },
        ],
        internalType: "struct FixedPoint.uq112x112",
        name: "priceAverage",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "peek",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cb3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c699c4d611610066578063c699c4d614610109578063d568866c1461011c578063d6d7d5251461012f578063eeb8a8d314610150578063fe33b3021461016357610093565b80634709904d1461009857806354fd9238146100c15780637046db52146100e1578063b4d1d79514610101575b600080fd5b6100ab6100a6366004610985565b610185565b6040516100b89190610b1f565b60405180910390f35b6100d46100cf366004610a15565b6101a0565b6040516100b89190610c0f565b6100f46100ef366004610985565b6102d2565b6040516100b89190610b0c565b6100d46102fb565b6100f46101173660046109a8565b610301565b6100f461012a3660046109a8565b61031e565b61014261013d3660046109a8565b610348565b6040516100b8929190610afc565b61014261015e3660046109a8565b610576565b610176610171366004610985565b6106c9565b6040516100b893929190610c18565b6001602052600090815260409020546001600160a01b031681565b600080836001600160a01b0316635909c0d56040518163ffffffff1660e01b815260040160206040518083038186803b1580156101dc57600080fd5b505afa1580156101f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102149190610a99565b90506000806000866001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561025457600080fd5b505afa158015610268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028c9190610a4d565b92509250925080860363ffffffff166102b7836001600160701b0316856001600160701b0316610706565b516001600160e01b0316029390930193505050505b92915050565b6060816040516020016102e59190610b1f565b6040516020818303038152906040529050919050565b61012c81565b50506040805180820190915260018152605360f81b602082015290565b505060408051808201909152600e81526d053757368695377617020545741560941b602082015290565b6000808061035884860186610985565b6001600160a01b038116600090815260208190526040902060010154909150429063ffffffff166103e3576001600160a01b0382166000908152602081905260409020600101805463ffffffff191663ffffffff83161790556103bb82826101a0565b6001600160a01b0390921660009081526020819052604081209290925550915081905061056f565b6001600160a01b03821660009081526020819052604090206001015463ffffffff90811682039061012c908216101561047e576001600160a01b0383166000908152602081815260409182902082519182019092526002909101546001600160e01b031681526001906104679061046290670de0b6b3a76400006107f2565b610851565b9095506001600160901b0316935061056f92505050565b600061048a84846101a0565b905060405180602001604052808363ffffffff16600080886001600160a01b03166001600160a01b03168152602001908152602001600020600001548403816104cf57fe5b046001600160e01b039081169091526001600160a01b0386166000908152602081815260409182902093516002850180546001600160e01b03191691851691909117908190556001808601805463ffffffff191663ffffffff8b81169190911790915595879055835192830190935290921682529161055c9161046291670de0b6b3a7640000906107f216565b9096506001600160901b03169450505050505b9250929050565b6000808061058684860186610985565b6001600160a01b038116600090815260208190526040902060010154909150429063ffffffff166105bf5760008093509350505061056f565b6001600160a01b03821660009081526020819052604090206001015463ffffffff90811682039061012c908216101561063e576001600160a01b0383166000908152602081815260409182902082519182019092526002909101546001600160e01b031681526001906104679061046290670de0b6b3a76400006107f2565b600061064a84846101a0565b9050610654610960565b60408051602080820183526001600160a01b0388166000908152908190529190912054819063ffffffff86169085038161068a57fe5b046001600160e01b03169052905060016106af61046283670de0b6b3a76400006107f2565b9097506001600160901b0316955050505050509250929050565b600060208181529181526040908190208054600182015483519485019093526002909101546001600160e01b031683529163ffffffff9091169083565b61070e610960565b600082116107375760405162461bcd60e51b815260040161072e90610bd8565b60405180910390fd5b8261075157506040805160208101909152600081526102cc565b6001600160901b0383116107b857600082607085901b8161076e57fe5b0490506001600160e01b038111156107985760405162461bcd60e51b815260040161072e90610ba1565b6040518060200160405280826001600160e01b03168152509150506102cc565b60006107c984600160701b85610858565b90506001600160e01b038111156107985760405162461bcd60e51b815260040161072e90610ba1565b6107fa610972565b600082158061082057505082516001600160e01b03168281029083828161081d57fe5b04145b61083c5760405162461bcd60e51b815260040161072e90610b33565b60408051602081019091529081529392505050565b5160701c90565b600080600061086786866108c3565b915091506000848061087557fe5b868809905082811115610889576001820391505b80830392508482106108ad5760405162461bcd60e51b815260040161072e90610b6a565b6108b88383876108f0565b979650505050505050565b60008080600019848609905083850292508281039150828110156108e8576001820391505b509250929050565b6000818103821680838161090057fe5b04925080858161090c57fe5b04945080816000038161091b57fe5b60028581038087028203028087028203028087028203028087028203028087028203028087028203029586029003909402930460010193909302939093010292915050565b60408051602081019091526000815290565b6040518060200160405280600081525090565b600060208284031215610996578081fd5b81356109a181610c3e565b9392505050565b600080602083850312156109ba578081fd5b823567ffffffffffffffff808211156109d1578283fd5b818501915085601f8301126109e4578283fd5b8135818111156109f2578384fd5b866020828501011115610a03578384fd5b60209290920196919550909350505050565b60008060408385031215610a27578182fd5b8235610a3281610c3e565b91506020830135610a4281610c6b565b809150509250929050565b600080600060608486031215610a61578081fd5b8351610a6c81610c56565b6020850151909350610a7d81610c56565b6040850151909250610a8e81610c6b565b809150509250925092565b600060208284031215610aaa578081fd5b5051919050565b60008151808452815b81811015610ad657602081850181015186830182015201610aba565b81811115610ae75782602083870101525b50601f01601f19169290920160200192915050565b9115158252602082015260400190565b6000602082526109a16020830184610ab1565b6001600160a01b0391909116815260200190565b60208082526019908201527f4669786564506f696e743a3a6d756c3a206f766572666c6f7700000000000000604082015260600190565b6020808252601a908201527f46756c6c4d6174683a3a6d756c4469763a206f766572666c6f77000000000000604082015260600190565b6020808252601e908201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604082015260600190565b6020808252601e908201527f4669786564506f696e743a3a6672616374696f6e3a2064697620627920300000604082015260600190565b90815260200190565b92835263ffffffff919091166020830152516001600160e01b0316604082015260600190565b6001600160a01b0381168114610c5357600080fd5b50565b6001600160701b0381168114610c5357600080fd5b63ffffffff81168114610c5357600080fdfea26469706673582212208affd0a9d06bbf6899d3a6ce395b60247be955ed4b9820ae3640df7792dceb2a64736f6c634300060c0033";
